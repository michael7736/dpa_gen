version: '3.8'

services:
  # PostgreSQL 主数据库
  postgres:
    image: postgres:15
    container_name: dpa-postgres
    environment:
      POSTGRES_DB: dpa_dev
      POSTGRES_USER: dpa_user
      POSTGRES_PASSWORD: dpa_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    networks:
      - dpa-network

  # Redis 缓存和消息队列
  redis:
    image: redis:7-alpine
    container_name: dpa-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - dpa-network

  # Qdrant 向量数据库
  qdrant:
    image: qdrant/qdrant:v1.8.1
    container_name: dpa-qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      QDRANT__SERVICE__HTTP_PORT: 6333
      QDRANT__SERVICE__GRPC_PORT: 6334
    networks:
      - dpa-network

  # Neo4j 图数据库
  neo4j:
    image: neo4j:5.0
    container_name: dpa-neo4j
    environment:
      NEO4J_AUTH: neo4j/dpa_password
      NEO4J_PLUGINS: '["apoc"]'
      NEO4J_apoc_export_file_enabled: true
      NEO4J_apoc_import_file_enabled: true
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    networks:
      - dpa-network

  # FastAPI 后端服务
  api:
    build:
      context: .
      dockerfile: backend/Dockerfile.dev
    container_name: dpa-api
    environment:
      - ENV=development
      - DATABASE_URL=postgresql://dpa_user:dpa_password@postgres:5432/dpa_dev
      - REDIS_URL=redis://redis:6379
      - QDRANT_URL=http://qdrant:6333
      - NEO4J_URL=bolt://neo4j:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=dpa_password
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./data:/app/data
    depends_on:
      - postgres
      - redis
      - qdrant
      - neo4j
    networks:
      - dpa-network
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  # Next.js 前端服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: dpa-frontend
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - api
    networks:
      - dpa-network
    command: ["npm", "run", "dev"]

  # Celery Worker 异步任务处理
  worker:
    build:
      context: .
      dockerfile: backend/Dockerfile.dev
    container_name: dpa-worker
    environment:
      - ENV=development
      - DATABASE_URL=postgresql://dpa_user:dpa_password@postgres:5432/dpa_dev
      - REDIS_URL=redis://redis:6379
      - QDRANT_URL=http://qdrant:6333
    volumes:
      - ./backend:/app
      - ./data:/app/data
    depends_on:
      - postgres
      - redis
      - api
    networks:
      - dpa-network
    command: ["celery", "-A", "app.celery", "worker", "--loglevel=info"]

volumes:
  postgres_data:
  redis_data:
  qdrant_data:
  neo4j_data:
  neo4j_logs:

networks:
  dpa-network:
    driver: bridge 